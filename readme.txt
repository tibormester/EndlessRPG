V1.0.0
This project is primarily to create a video game that appeals to myself. 

The genres I hope to touch on and their inspirations are as follows:
	Rouge Like: Ability/Build modification and Loot RNG dependent, Minecraft Psi mod 'spell modification depth' but with Noita alchemy like complexity, enabling each player and each character to develop their own unique stlye of gameplay without the domince of 'optimal builds and strategies'
	FPS: Fast and Smooth Movement, Sliding, Mantling, Wall running, Grappling hooks, etc... Warframe is a good example, people play games to have fun, fast and smooth movement is fun, walking and wasting time isn't
	Souls-Like: Skill based combat, telegraphed heavy attacks requiring dodge/parries, directional swings and spacing, sponge like bosses and simply seeing damage numbers go up is the bare minimum for increased difficulty in combat. By building the system with enough complexity at its foundation, it enables skill based increase in difficulty as opposed to purely stat scaling.
	Open World: Infinite terrain generation with dungeones, biomes (resources, wildlife, enemies), simulated economy, even politics eventually? More importanly a diverse array of elemental and mundane interactionss: Fire, Liquids, Gasses, Gravity, Force(Wind), Time Dilations etc... Biomes will be themed around these and flora and fauna will have abilities with these modifications. The ability to adventure and explore in a virtual world freely is simply unparalleled. Theres nothing revolutionary about implementing procedural world generation as opposed to a handcrafted world so why not?
	Sandbox: Persistent progression, player will have a mobile base (air ship, normal ship, pocket dimension etc...), can build a place to live and store momentos from adventures, but also crafting progression where engaging with increased complexity yields increased efficiency and benefits, using factorio like assembly lines and automations to create gear and equipment. But also the player character themselves are a canvas to be edited. Rimworld like body modifications to affect stats and to provide different alchemical substances to be utilized in the modular abilities. Being able to explore an infinite world is pointless if youre restricted by inventory space or the inability to bring your creations with you and also reduced if youre unable to interact and contribute to it. I aim to solve this by allowing the player to simply bring their 'base' along with them as they travel and making it a fundamental to why they may wish to extract resources from the environment or to sell of their produced goods into the economy. 
	MMO: Very stretch goal is to make this work with multiplayer.... maybe have singleplayer instances be islands that can be merged and have hub worlds and contested resource worlds as well as all the other good features and competitve pvp tournaments...
	
All of these goals are pretty ambitious and see a lot of feature creep. The current objectives I have set for myself:
	Modular Character System:
		Attacks:
			Stances- i.e. Torso has various slashing and thrusting stances that manipulate the arm, the arm has stances that manipulate the hand... and then the sword will detect collisions and apply damage, if it has magical attributes it might also trigger them like a force blade pushing the hitbox out from the sword..
			Styles- stlyes are a sequence of stances and other effects chained together with other data like speeds and strength modifiers triggered by a player attack action. Mashing the attack button will simply go through the sequence of attacks in order while directional inputs can select certain attacks specifcally enabling both a simple and advanced combat mode
			Hitboxes/Damage - like rimworld each limb will have health and store a log of the damage and damage type recieved so it can be healed with different healing abilities (scars are different from burns and cuts etc...), taking damage may reduce a limbs efficiency so they contribute less stats to the character overall, when the limb or organ is destroyed it can be dropped and then later fixed / requipped or processed for other materials etc...
		Equip/Unequip- I want to utilize the Entity Component System paradigm to create an extremely modular character system but my object orientated programming background is making this difficult. Each limb should be able to work with any combination of organs and equipment and any character should function with any combination of limbs, I am considering having containers like characters, bodyparts, organs, equipment, armour, weapons, etc... be objects and their contents be the components. This way a health component on a piece of equipment vs bodypart vs character will function differently since the system will be unique to the class
			Loot/RNG: There should be leveling and skill progression so that using limbs and stuff enables the increase in their stats (EVs), but they should also have base stats (IVs) that are randomized and genetic. This enables the casual player to simply level, but the dedicated player to grind for optimal organs
		Movement - I'm not using root motion (not yet at least), so I want to sepearate the animations from logic, the goal is to make it not too apparent this is happening, but janky is fine for now. Having spider legs may grant the ability to climb on walls and stuff like that, so the movement code needs to be very modular with the ability to add and remove various abilities given by the limbs (person without a head cant look around, no legs can jump or walk...) The issue becomes this would be very unfun if you loose a limb.... maybe a soul third person default camera? On death a ghost mode until respawn?			
		Abilities: So far there seems to be 2 different types of component classes: Stats and Abilities
			Stats: This is pure numerical data, bigger stats are better, make you hit harder and faster, take more damage etc...
			Abilities: These are functions that the player can call that do things. None of them are default and are added by organs and limbs that provide them. These abilities are often modified by their container's stats, their parent's stats, or the character's stats. And they often cast a signal down the entire character signaling animations to be played for any node that knows how to play it
				Movement Abilities: turn towards, look up/down, walk, run, jump, slide, crouch, fly, teleport
				Combat Abilities: L/R/U/D slash, thrust, kick
				Utilitiy Abilities: Chat, Hear, Pick-up, Put-Down, Craft....
	Crafting: Currently there is no inventory system so this gives a good reason to implement the crafting systems
		Resource Gathering - Enemies will drop their organs, limbs, and gear with different rates depending on death type (slashing increases limb drops) and damage (preservation), while flora like trees will drop wood (coded similarily)
		Transportation:
			Soul Space - To increase QOL there will be a simple magnet effect that (add a filter function) grabs resources and stores them into a sortable list of items (add icons?), but in future iterations this should be progression gated and one should rely on physical manipulation or mundane inventories and such
			Physical Manipulation:
				Picking things up- reach and hold them in ones hand so they travel with or to simply store in an equipped inventory like a back pack
				Levitation- an effect to hover objects as they travel with the player, push pull rotate, and then set them down
				Throwing- tossing an equipped object (should deal damage and have a trajectory dependent on mass etc...)
		Crafting: The stats of the material should contribute to the process in terms of both final product stats, but also process speed and efficiency (if using fuel or something)
			Stations: Stations take in inputs and produce outputs based on their list of recipes. Stations have generic classes that define the set of base recipes but variations of these stations like higher tiers may have tweaked recipes that change crafting time and resource ratios...
			Recipes: The formula of inputs to outputs as well as describing how the input material stats translate to the output material stats
			Buidlings: are the physical structures with the abstract stations housed within, buildings can have more than one station and the inputs and outputs can be physicalized areas in the world with the recipe selection taking place in a pop up gui tree list (maybe sorted by valid recipes?)
			Soul Space Crafting: Some stations for basic crafting should be able to be done in the soul space using that as input and output
